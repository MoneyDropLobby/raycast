// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Filiale {
  id            String        @id @unique @default(cuid())
  strasse       String
  strasseNr     String
  plz           String
  ort           String
  telefon       String?
  website       String?
  logo          String?
  status        Status @default(AKTIV)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  userId        String
  user          User          @relation(fields: [userId], references: [id], onDelete: Restrict)
  kassen        Kassen[]
  transaktionen Transaktion[]
}

model Kassen {
  id                 String               @id @unique @default(cuid())
  name               String
  createdAt          DateTime             @default(now())
  updatedAt          DateTime             @updatedAt
  filialeId          String               @unique
  filiale            Filiale              @relation(fields: [filialeId], references: [id], onDelete: Restrict)
  kassenLayoutId     String
  kassenLayout       KassenLayout[]
  artikeluntergruppe ArtikelUntergruppe[]
  transaktionen      Transaktion[]
  status             Status @default(AKTIV)
}

model KassenLayout {
  id        String   @id @unique @default(cuid())
  name      String
  kassenId  String
  kassen    Kassen   @relation(fields: [kassenId], references: [id], onDelete: Restrict)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model ArtikelHauptgruppe {
  id           String               @id @unique @default(cuid())
  name         String
  beschreibung String?
  aktiv        Boolean              @default(true)
  createdAt    DateTime             @default(now())
  updatedAt    DateTime             @updatedAt
  untergruppen ArtikelUntergruppe[]
}

model ArtikelUntergruppe {
  id                    String             @id @unique @default(cuid())
  name                  String
  beschreibung          String?
  aktiv                 Boolean            @default(true)
  createdAt             DateTime           @default(now())
  updatedAt             DateTime           @updatedAt
  hauptgruppeId         String
  hauptgruppe           ArtikelHauptgruppe @relation(fields: [hauptgruppeId], references: [id], onDelete: Restrict)
  artikel               Artikel[]
  freigegebenFuerKassen Kassen[]
}

model Garantie {
  id           String    @id @unique @default(cuid())
  tage         Int?
  beschreibung String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  artikel      Artikel[]
}

model Lager {
  id             String    @id @unique @default(cuid())
  lagerbestand   Int       @default(0)
  mindestbestand Int       @default(0)
  letzterEinkauf DateTime?
  letzterVerkauf DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  artikel        Artikel   @relation(fields: [artikelId], references: [id], onDelete: Restrict)
  artikelId      Int       @unique
}

model Artikel {
  id              Int                    @id @unique @default(autoincrement())
  externeId       String?
  name            String
  beschreibung           String?
  verkaufspreis          Decimal                @db.Decimal(10, 2)
  verkaufspreisExkl      Boolean                @default(false)
  einkaufspreis          Decimal                @db.Decimal(10, 2)
  einkaufspreisExkl      Boolean                @default(false)
  mwst                   MwStSatz
  ean                    String?
  warnmeldung            String?
  mindestalter           Int?
  untergruppeId          String?
  untergruppe            ArtikelUntergruppe?     @relation(fields: [untergruppeId], references: [id], onDelete: Restrict)
  verkaufsEinheit        VerkaufsEinheit        @default(STUECK)
  mengeProEinheit        Decimal                @default(1)
  status                 Status                 @default(AKTIV)
  createdAt              DateTime               @default(now())
  updatedAt              DateTime               @updatedAt
  updatedBy              String?
  tags                   String[]
  garantie               Garantie?              @relation(fields: [garantieId], references: [id], onDelete: Restrict)
  garantieId             String?
  lager                  Lager?
  transaktionsPositionen TransaktionsPosition[]

  @@index([ean])
  @@index([name])
  @@index([status])
}

model Transaktion {
  id              String                 @id @unique @default(cuid())
  typ             TransaktionsTyp        @default(VERKAUF)
  datum           DateTime               @default(now())
  kasseId         String
  kasse           Kassen                 @relation(fields: [kasseId], references: [id], onDelete: Restrict)
  filialeId       String
  filiale         Filiale                @relation(fields: [filialeId], references: [id], onDelete: Restrict)
  verkaeufer      String /// Name des Verkäufers
  bemerkung       String?
  gruppenReferenz String? /// Referenz für zusammengehörige Transaktionen
  positionen      TransaktionsPosition[]
  zahlungen       TransaktionsZahlung[]
  storniert       Boolean                @default(false)
  stornoGrund     String?
  stornoVon       String? /// Referenz zur Original-Transaktion bei Storno
  createdAt       DateTime               @default(now())
  updatedAt       DateTime               @updatedAt

  @@index([datum])
  @@index([kasseId])
}

model TransaktionsPosition {
  id            String      @id @unique @default(cuid())
  transaktionId String
  transaktion   Transaktion @relation(fields: [transaktionId], references: [id], onDelete: Cascade)
  artikelId     Int
  artikel       Artikel     @relation(fields: [artikelId], references: [id], onDelete: Restrict)
  menge         Decimal
  einzelpreis   Decimal
  rabattProzent Decimal     @default(0)
  rabattBetrag  Decimal     @default(0)
  mwstSatz      MwStSatz
  mwstBetrag    Decimal
  gesamtBetrag  Decimal
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([transaktionId])
  @@index([artikelId])
}

model TransaktionsZahlung {
  id            String      @id @unique @default(cuid())
  transaktionId String
  transaktion   Transaktion @relation(fields: [transaktionId], references: [id], onDelete: Cascade)
  zahlungsart   Zahlungsart
  waehrung      Waehrung    @default(CHF)
  betrag        Decimal     @db.Decimal(10, 2)
  kurs          Decimal     @default(1.00) @db.Decimal(10, 2)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt

  @@index([transaktionId])
}
